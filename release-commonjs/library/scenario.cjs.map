{"version":3,"sources":["../../source/library/scenario.js"],"names":["Bundle","DefaultBundle","ModuleBundle","_Compare","DefaultCompare","ModuleCompare","Mutex","DefaultSemaphore","ModuleSemaphore","Compare","Scenario","constructor","path","modifierPattern","modifier","match","Is","not","null","exec","push","lastIndex","name","getName","localPath","Path","dirname","local","FileSystem","pathExistsSync","JSON5","parse","readFileSync","_path","_modifier","_name","_local","_lock","getReferenceHtml","html","Pug","compileFile","replace","createModule","getNodeHtml","getServerHtml","modulePath","use","module","fn","default","node","getSource","getBrowserHtml","source","preBundlePath","basename","extname","postBundlePath","ensureDir","writeFile","browser","Browser","launch","page","newPage","content","setContent","evaluate","readFile","div","$","innerHTML","close","createScenarioFromFolder","includePattern","item","readdirSync","scenario","concat","filter","isDirectory","map","folder","isFile","file","reduce","isMatch","pattern","createScenarioFromFile","flat","createTest","information","statSync","forEach","Test","BaseTest","relative","test","referenceHtml","serverHtml","browserHtml","Promise","all","isEqual","log","repeat","true"],"mappings":"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","sourcesContent":["import DefaultSemaphore, * as ModuleSemaphore from 'await-semaphore'\nimport BaseTest from 'ava'\nimport Browser from 'puppeteer'\nimport DefaultBundle, * as ModuleBundle from 'esbuild'\nimport DefaultCompare, * as ModuleCompare from 'html-differ'\nimport FileSystem from 'fs-extra'\nimport Format from 'pretty'\nimport Is from '@pwn/is'\nimport JSON5 from 'json5'\nimport Match from 'minimatch'\nimport Path from 'path'\nimport Pug from 'pug'\n\nconst { 'build': Bundle } = DefaultBundle || ModuleBundle\nconst { 'HtmlDiffer': _Compare } = DefaultCompare || ModuleCompare\nconst { Mutex } = DefaultSemaphore || ModuleSemaphore\nconst Compare = new _Compare({ 'compareAttributesAsJSON': [ { 'name': 'style', 'isFunction': false } ], 'ignoreComments': false })\n\nclass Scenario {\n\n  constructor(path) {\n\n    let modifierPattern = /\\.(\\w*?)[./]/gims\n    let modifier = []\n\n    let match = null\n\n    while (Is.not.null(match = modifierPattern.exec(path))) {\n      modifier.push(match[1])\n      modifierPattern.lastIndex --\n    }\n\n    let name = Scenario.getName(path)\n\n    let localPath = `${Path.dirname(path)}/${name}.json`\n    let local = {}\n  \n    if (FileSystem.pathExistsSync(localPath)) {\n      local = JSON5.parse(FileSystem.readFileSync(localPath, { 'encoding': 'utf-8' }))\n    }\n  \n    this._path = path\n    this._modifier = modifier\n\n    this._name = name\n    this._local = local\n\n    this._lock = new Mutex()\n\n  }\n\n  get path() {\n    return this._path\n  }\n\n  get modifier() {\n    return this._modifier\n  }\n\n  get name() {\n    return this._name\n  }\n\n  get local() {\n    return this._local\n  }\n\n  async getReferenceHtml() {\n\n    let html = null\n    html = Pug.compileFile(this._path)(this._local)\n    html = Format(html)\n\n    html = html.replace(/<(.*?) \\/>/gms, '<$1>')\n\n    return html\n\n  }\n\n  async createModule() {\n    // TODO\n  }\n\n  getNodeHtml( /* node */ ) {\n     // TODO\n  }\n\n  async getServerHtml() {\n\n    let modulePath = await this._lock.use(() => this.createModule()) // this.createModule() // \n    let module = await import(modulePath)\n\n    let fn = module.default\n    let node = fn(this._local)\n\n    let html = null\n    html = this.getNodeHtml(node)\n    html = Format(html)\n\n    return html\n    \n  }\n\n  async getSource( /* modulePath */ ) {\n     // TODO\n  }\n\n  async getBrowserHtml() {\n\n    let modulePath = await this._lock.use(() => this.createModule()) // this.createModule() // \n    let source = await this.getSource(modulePath)\n   \n    let preBundlePath = `${Path.dirname(modulePath)}/${Path.basename(modulePath, Path.extname(modulePath))}-pre-bundle${Path.extname(modulePath)}`\n    let postBundlePath = `${Path.dirname(modulePath)}/${Path.basename(modulePath, Path.extname(modulePath))}-post-bundle${Path.extname(modulePath)}`\n\n    await FileSystem.ensureDir(Path.dirname(preBundlePath))\n    await FileSystem.writeFile(preBundlePath, source, { 'encoding': 'utf-8', 'flag': 'wx' })\n\n    await Bundle({\n      'define': {\n        'global': '\\'global\\'',\n        'process.env.NODE_DEBUG': '\\'process.env.NODE_DEBUG\\'',\n        'process': '\\'process\\''\n      },\n      'entryPoints': [ preBundlePath ],\n      'outfile': postBundlePath,\n      'minify': false,\n      'bundle': true\n    })\n    \n    let browser = await Browser.launch() // { 'devtools': true, 'headless': false })\n\n    try {\n    \n      let page = await browser.newPage()\n\n      let content = null\n      content = ` <!DOCTYPE html>\n                  <html>\n                    <head>\n                      <meta   charset=\"utf-8\">\n                      <meta   name=\"viewport\"\n                              content=\"width=device-width\">\n                    </head>\n                    <body>\n                      <div></div>\n                    </body>\n                  </html>`\n      \n      content = Format(content)\n      \n      await page.setContent(content, { 'timeout': 0, 'waitUntil': 'domcontentloaded' })\n      await page.evaluate(await FileSystem.readFile(postBundlePath, { 'encoding': 'utf-8' }))\n      \n      let div = await page.$('body div')\n\n      let html = null\n      html = await div.evaluate((node) => node.innerHTML)\n      html = Format(html)\n\n      return html\n      \n    } finally {\n      await browser.close()\n    }\n\n  } \n  \n  static getName(name) {\n\n    if (Path.extname(name) === '') {\n      return name\n    } else {\n      return this.getName(Path.basename(name, Path.extname(name)))\n    }\n\n  }\n\n  static createScenarioFromFolder(path) {\n\n    let includePattern = ['*.pug']\n    // let excludePattern = ['*.skip.pug']\n  \n    let item = FileSystem.readdirSync(path, { 'encoding': 'utf-8', 'withFileTypes': true })\n  \n    let scenario = []\n\n    scenario = scenario.concat(item\n      .filter((item) => item.isDirectory())\n      .map((folder) => this.createScenarioFromFolder(`${path}/${folder.name}`)))\n    \n    scenario = scenario.concat(item\n      .filter((item) => item.isFile())\n      .filter((file) => includePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      // .filter((file) => !excludePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      .map((file) => this.createScenarioFromFile(`${path}/${file.name}`)))\n  \n    return scenario.flat()\n  \n  }\n  \n  static createScenarioFromFile( /* path */ ) {\n    // TODO\n    // return new Scenario(path)\n  }\n\n  static createTest(path) {\n\n    let information = FileSystem.statSync(path)\n    let scenario = []\n\n    if (information.isDirectory()) { \n      scenario.push(...this.createScenarioFromFolder(path))\n    } else {\n      scenario.push(this.createScenarioFromFile(path))\n    }\n  \n    scenario.forEach((scenario) => {\n      \n      let Test = scenario.modifier.reduce((Test, modifier) => Test[modifier], BaseTest)\n\n      Test(`'${Path.relative(path, scenario.path)}'`, async (test) => {\n\n        let [ referenceHtml, serverHtml, browserHtml ] = await Promise.all([ scenario.getReferenceHtml(), scenario.getServerHtml(), scenario.getBrowserHtml() ])\n\n        if (!Compare.isEqual(serverHtml, referenceHtml)) {\n\n          test.log('-'.repeat(80))\n          test.log('reference')\n          test.log('-'.repeat(80))\n          test.log(referenceHtml)\n\n          test.log('-'.repeat(80))\n          test.log('server')\n          test.log('-'.repeat(80))\n          test.log(serverHtml)\n\n        }\n\n        test.true(Compare.isEqual(serverHtml, referenceHtml))\n\n        if (!Compare.isEqual(browserHtml, serverHtml)) {\n\n          test.log('-'.repeat(80))\n          test.log('server')\n          test.log('-'.repeat(80))\n          test.log(serverHtml)\n\n          test.log('-'.repeat(80))\n          test.log('browser')\n          test.log('-'.repeat(80))\n          test.log(browserHtml)\n\n        }\n\n        test.true(Compare.isEqual(browserHtml, serverHtml))\n\n      })\n\n    })\n  \n  }\n\n}\n\nexport { Scenario }"],"file":"scenario.cjs"}