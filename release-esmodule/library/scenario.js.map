{"version":3,"sources":["../../source/library/scenario.js"],"names":["DefaultSemaphore","ModuleSemaphore","BaseTest","Browser","DefaultBundle","ModuleBundle","DefaultCompare","ModuleCompare","FileSystem","Format","Is","JSON5","Match","Path","Pug","Bundle","_Compare","Mutex","Compare","Scenario","constructor","path","modifierPattern","modifier","match","not","null","exec","push","lastIndex","name","getName","localPath","dirname","local","pathExistsSync","parse","readFileSync","_path","_modifier","_name","_local","_lock","getReferenceHtml","html","compileFile","replace","createModule","getNodeHtml","getServerHtml","modulePath","use","module","fn","default","node","getSource","getBrowserHtml","source","preBundlePath","basename","extname","postBundlePath","ensureDir","writeFile","browser","launch","page","newPage","content","setContent","evaluate","readFile","div","$","innerHTML","close","createScenarioFromFolder","includePattern","item","readdirSync","scenario","concat","filter","isDirectory","map","folder","isFile","file","reduce","isMatch","pattern","createScenarioFromFile","flat","createTest","information","statSync","forEach","Test","relative","test","referenceHtml","serverHtml","browserHtml","Promise","all","isEqual","log","repeat","true"],"mappings":"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","sourcesContent":["import DefaultSemaphore, * as ModuleSemaphore from 'await-semaphore'\nimport BaseTest from 'ava'\nimport Browser from 'puppeteer'\nimport DefaultBundle, * as ModuleBundle from 'esbuild'\nimport DefaultCompare, * as ModuleCompare from 'html-differ'\nimport FileSystem from 'fs-extra'\nimport Format from 'pretty'\nimport Is from '@pwn/is'\nimport JSON5 from 'json5'\nimport Match from 'minimatch'\nimport Path from 'path'\nimport Pug from 'pug'\n\nconst { 'build': Bundle } = DefaultBundle || ModuleBundle\nconst { 'HtmlDiffer': _Compare } = DefaultCompare || ModuleCompare\nconst { Mutex } = DefaultSemaphore || ModuleSemaphore\nconst Compare = new _Compare({ 'compareAttributesAsJSON': [ { 'name': 'style', 'isFunction': false } ], 'ignoreComments': false })\n\nclass Scenario {\n\n  constructor(path) {\n\n    let modifierPattern = /\\.(\\w*?)[./]/gims\n    let modifier = []\n\n    let match = null\n\n    while (Is.not.null(match = modifierPattern.exec(path))) {\n      modifier.push(match[1])\n      modifierPattern.lastIndex --\n    }\n\n    let name = Scenario.getName(path)\n\n    let localPath = `${Path.dirname(path)}/${name}.json`\n    let local = {}\n  \n    if (FileSystem.pathExistsSync(localPath)) {\n      local = JSON5.parse(FileSystem.readFileSync(localPath, { 'encoding': 'utf-8' }))\n    }\n  \n    this._path = path\n    this._modifier = modifier\n\n    this._name = name\n    this._local = local\n\n    this._lock = new Mutex()\n\n  }\n\n  get path() {\n    return this._path\n  }\n\n  get modifier() {\n    return this._modifier\n  }\n\n  get name() {\n    return this._name\n  }\n\n  get local() {\n    return this._local\n  }\n\n  async getReferenceHtml() {\n\n    let html = null\n    html = Pug.compileFile(this._path)(this._local)\n    html = Format(html)\n\n    html = html.replace(/<(.*?) \\/>/gms, '<$1>')\n\n    return html\n\n  }\n\n  async createModule() {\n    // TODO\n  }\n\n  getNodeHtml( /* node */ ) {\n     // TODO\n  }\n\n  async getServerHtml() {\n\n    let modulePath = await this._lock.use(() => this.createModule()) // this.createModule() // \n    let module = await import(modulePath)\n\n    let fn = module.default\n    let node = fn(this._local)\n\n    let html = null\n    html = this.getNodeHtml(node)\n    html = Format(html)\n\n    return html\n    \n  }\n\n  async getSource( /* modulePath */ ) {\n     // TODO\n  }\n\n  async getBrowserHtml() {\n\n    let modulePath = await this._lock.use(() => this.createModule()) // this.createModule() // \n    let source = await this.getSource(modulePath)\n   \n    let preBundlePath = `${Path.dirname(modulePath)}/${Path.basename(modulePath, Path.extname(modulePath))}-pre-bundle${Path.extname(modulePath)}`\n    let postBundlePath = `${Path.dirname(modulePath)}/${Path.basename(modulePath, Path.extname(modulePath))}-post-bundle${Path.extname(modulePath)}`\n\n    await FileSystem.ensureDir(Path.dirname(preBundlePath))\n    await FileSystem.writeFile(preBundlePath, source, { 'encoding': 'utf-8', 'flag': 'wx' })\n\n    await Bundle({\n      'define': {\n        'global': '\\'global\\'',\n        'process.env.NODE_DEBUG': '\\'process.env.NODE_DEBUG\\'',\n        'process': '\\'process\\''\n      },\n      'entryPoints': [ preBundlePath ],\n      'outfile': postBundlePath,\n      'minify': false,\n      'bundle': true\n    })\n    \n    let browser = await Browser.launch() // { 'devtools': true, 'headless': false })\n\n    try {\n    \n      let page = await browser.newPage()\n\n      let content = null\n      content = ` <!DOCTYPE html>\n                  <html>\n                    <head>\n                      <meta   charset=\"utf-8\">\n                      <meta   name=\"viewport\"\n                              content=\"width=device-width\">\n                    </head>\n                    <body>\n                      <div></div>\n                    </body>\n                  </html>`\n      \n      content = Format(content)\n      \n      await page.setContent(content, { 'timeout': 0, 'waitUntil': 'domcontentloaded' })\n      await page.evaluate(await FileSystem.readFile(postBundlePath, { 'encoding': 'utf-8' }))\n      \n      let div = await page.$('body div')\n\n      let html = null\n      html = await div.evaluate((node) => node.innerHTML)\n      html = Format(html)\n\n      return html\n      \n    } finally {\n      await browser.close()\n    }\n\n  } \n  \n  static getName(name) {\n\n    if (Path.extname(name) === '') {\n      return name\n    } else {\n      return this.getName(Path.basename(name, Path.extname(name)))\n    }\n\n  }\n\n  static createScenarioFromFolder(path) {\n\n    let includePattern = ['*.pug']\n    // let excludePattern = ['*.skip.pug']\n  \n    let item = FileSystem.readdirSync(path, { 'encoding': 'utf-8', 'withFileTypes': true })\n  \n    let scenario = []\n\n    scenario = scenario.concat(item\n      .filter((item) => item.isDirectory())\n      .map((folder) => this.createScenarioFromFolder(`${path}/${folder.name}`)))\n    \n    scenario = scenario.concat(item\n      .filter((item) => item.isFile())\n      .filter((file) => includePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      // .filter((file) => !excludePattern.reduce((isMatch, pattern) => isMatch ? isMatch : Match(file.name, pattern), false))\n      .map((file) => this.createScenarioFromFile(`${path}/${file.name}`)))\n  \n    return scenario.flat()\n  \n  }\n  \n  static createScenarioFromFile( /* path */ ) {\n    // TODO\n    // return new Scenario(path)\n  }\n\n  static createTest(path) {\n\n    let information = FileSystem.statSync(path)\n    let scenario = []\n\n    if (information.isDirectory()) { \n      scenario.push(...this.createScenarioFromFolder(path))\n    } else {\n      scenario.push(this.createScenarioFromFile(path))\n    }\n  \n    scenario.forEach((scenario) => {\n      \n      let Test = scenario.modifier.reduce((Test, modifier) => Test[modifier], BaseTest)\n\n      Test(`'${Path.relative(path, scenario.path)}'`, async (test) => {\n\n        let [ referenceHtml, serverHtml, browserHtml ] = await Promise.all([ scenario.getReferenceHtml(), scenario.getServerHtml(), scenario.getBrowserHtml() ])\n\n        if (!Compare.isEqual(serverHtml, referenceHtml)) {\n\n          test.log('-'.repeat(80))\n          test.log('reference')\n          test.log('-'.repeat(80))\n          test.log(referenceHtml)\n\n          test.log('-'.repeat(80))\n          test.log('server')\n          test.log('-'.repeat(80))\n          test.log(serverHtml)\n\n        }\n\n        test.true(Compare.isEqual(serverHtml, referenceHtml))\n\n        if (!Compare.isEqual(browserHtml, serverHtml)) {\n\n          test.log('-'.repeat(80))\n          test.log('server')\n          test.log('-'.repeat(80))\n          test.log(serverHtml)\n\n          test.log('-'.repeat(80))\n          test.log('browser')\n          test.log('-'.repeat(80))\n          test.log(browserHtml)\n\n        }\n\n        test.true(Compare.isEqual(browserHtml, serverHtml))\n\n      })\n\n    })\n  \n  }\n\n}\n\nexport { Scenario }"],"file":"scenario.js"}