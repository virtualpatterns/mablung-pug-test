{"version":3,"sources":["../../../source/test/library/scenario.js"],"names":["FileSystem","Path","Scenario","BaseScenario","FilePath","_URL","fileURLToPath","import","meta","url","constructor","parameter","createModule","path","dirname","_path","_name","extname","source","toUpperCase","pathExists","writeFile","getNodeHtml","getSource","createScenarioFromFile"],"mappings":"uBAAA,OAAOA,UAAP,MAAuB,UAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,SAASC,QAAQ,IAAIC,YAArB,QAAyC,gBAAzC;;AAEA,MAAMC,QAAQ,GALdC,IAAI,CAACC,aAAL,CAAmBC,MAAM,CAACC,IAAP,CAAYC,GAA/B,CAKA;;AAEA,MAAMP,QAAN,SAAuBC,YAAvB,CAAoC;;AAElCO,EAAAA,WAAW,CAAC,GAAGC,SAAJ,EAAe;AACxB,UAAM,GAAGA,SAAT;AACD;;AAED,QAAMC,YAAN,GAAqB;;AAEnB,QAAIC,IAAI,GAAI,GAAEZ,IAAI,CAACa,OAAL,CAAa,KAAKC,KAAlB,CAAyB,IAAG,KAAKC,KAAM,GAAEf,IAAI,CAACgB,OAAL,CAAab,QAAb,CAAuB,EAA9E;AACA,QAAIc,MAAM,GAAGjB,IAAI,CAACgB,OAAL,CAAab,QAAb,EAAuBe,WAAvB,OAAyC,MAAzC,GAAkD,2BAAlD,GAAgF,yBAA7F;;AAEA,QAAI,EAAE,MAAMnB,UAAU,CAACoB,UAAX,CAAsBP,IAAtB,CAAR,CAAJ,EAA0C;AACxC,YAAMb,UAAU,CAACqB,SAAX,CAAqBR,IAArB,EAA2BK,MAA3B,EAAmC,EAAE,YAAY,OAAd,EAAuB,QAAQ,IAA/B,EAAnC,CAAN;AACD;;AAED,WAAOL,IAAP;;AAED;;AAEDS,EAAAA,WAAW,GAAE,UAAa;AACxB,WAAO,aAAP;AACD;;AAED,QAAMC,SAAN,GAAiB,gBAAmB;AAClC,WAAS;AACb,6DADI;AAED;;AAED,SAAOC,sBAAP,CAA8B,GAAGb,SAAjC,EAA4C;AAC1C,WAAO,IAAIT,QAAJ,CAAa,GAAGS,SAAhB,CAAP;AACD,GA9BiC;;;;AAkCpC,SAAST,QAAT","sourcesContent":["import FileSystem from 'fs-extra'\nimport Path from 'path'\n\nimport { Scenario as BaseScenario } from '../../index.js'\n\nconst FilePath = __filePath\n\nclass Scenario extends BaseScenario {\n\n  constructor(...parameter) {\n    super(...parameter)\n  }\n\n  async createModule() {\n\n    let path = `${Path.dirname(this._path)}/${this._name}${Path.extname(FilePath)}`\n    let source = Path.extname(FilePath).toUpperCase() === '.CJS' ? 'module.exports = () => []' : 'export default () => []'\n\n    if (!(await FileSystem.pathExists(path))) {\n      await FileSystem.writeFile(path, source, { 'encoding': 'utf-8', 'flag': 'wx' })\n    }\n\n    return path\n\n  }\n\n  getNodeHtml( /* node */ ) {\n    return '<div></div>'\n  }\n\n  async getSource( /* modulePath */ ) {\n    return  ` let div = document.querySelector('body div')\n              div.appendChild(document.createElement('div'))`\n  }\n  \n  static createScenarioFromFile(...parameter) {\n    return new Scenario(...parameter)\n  }\n\n}\n\nexport { Scenario }"],"file":"scenario.js"}